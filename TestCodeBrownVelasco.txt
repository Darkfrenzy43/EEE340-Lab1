// submitted by OCdt Velasco and OCdt Brown
Description:

    This file is to contain all the test code for the antlr code written in the NimbleBrownVelasco.g4 file,
    as per the lab instructions.

    Each token/parsing rule is to have their own section of valid and invalid code.


Valid IDs (Identifiers):
- _theFirst
- Number_2
- tHiRD
- fourth

Invalid IDs (Identifiers):
- 0asfd
- @
- $1234asdf
- notValid-d:D


Valid Strings:
- "hello"
- "hello\a"
- "hello\\"
- "hello\\n \n"
- "\b"
- "\f"
- "\r"
- "\t"
- "\v"
- "\'"
- "\""
- "\?"

Invalid Strings:
- "hello\c"
- "hello
- "hello\\\"
- "\"
- " \"
- "\ "


Valid Expressions
- (-10)
- (!hello)
- -true
- - 1 == 65
- 75 == true
- hello < best
- "test" + 10

Invalid Expressions
- == 10
- * 6
- 35 < <
- ()


Valid Statement
- hello = (-10)
- print hello
- while (6+10){}
- while true { if 10 + 10{} }
- if "hello" {} else {test = 7}
- return "string"

Invalid Statement
- pint true
- while true {
- if {}
- return 10 === 6
- if "yes" {} else true {test = 66}


Valid Function Calls:
- this_one_is_valid()
- computeThis(a, b, c )
- _DoSomething( 123    , 1 + 3 * 5   )
- oneInAnother((12 + 3) - 2, someVar);
- thisWillDo( sureWill() )

Invalid Function Calls:
- nope(, )
- not_good(really bad)
- 123NotViable()
- Absolutely()not
- niceTry(try ,, again)